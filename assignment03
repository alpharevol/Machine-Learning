import numpy as np
import matplotlib.pyplot as plt

def inputData():
    point_x = np.random.randint(-100, 100, 300)
    point_y = np.random.randint(-100, 100, 300)

    fig = plt.figure()
    ax = fig.add_subplot(1, 1, 1)
    ax.spines['bottom'].set_position(('data', 0))
    ax.spines['left'].set_position(('data', 0))
    plt.title('random 300 points')
    plt.scatter(point_x, point_y, color='b')
    plt.show()

    return [point_x, point_y]
    
    
    def initalLabel(numCluster):
    label_list = np.random.randint(1,numCluster+1,300)

    return label_list
    
    def initCluster(cluster_num, label_list, point_x, point_y):
    first_cluster = []

    for cluster in range(1, cluster_num + 1):
        cluster_x = []
        cluster_y = []
        for label_index in range(len(label_list)):
            if cluster == label_list[label_index]:
                cluster_x.append(point_x[label_index])
                cluster_y.append(point_y[label_index])
        first_cluster.append([cluster_x, cluster_y])

    center = calculateCenter(cluster_num, first_cluster)

    plot(cluster_num, first_cluster, center)

    return first_cluster, center
    
    def calculateCenter(cluster_num, clusterResult):
    clusterCenter = []
    for cluster in range(cluster_num):
        x = clusterResult[cluster][0]
        y = clusterResult[cluster][1]
        try:
            clusterCenter.append([(sum(x)/len(x)), (sum(y)/len(y))])
        except ZeroDivisionError:
            x = np.random.randint(-100,100,1)
            y = np.random.randint(-100,100,1)
            clusterCenter.append([x[0],y[0]])
    return clusterCenter
    
    
    
    def distance(x_1, y_1, x_2, y_2):
    return pow((x_1-x_2), 2) + pow((y_1-y_2), 2)
    
    
    def energy(cluster, center):
    energy_num = []
    for i in range(len(cluster)):
        for j in range(len(cluster[i][0])):
            k = distance(cluster[i][0][j], cluster[i][1][j], center[i][0], center[i][1])
            energy_num.append(k)
    return sum(energy_num) / len(energy_num)
    
    def cluster(center, point_x, point_y):
    new_label = []
    new_cluster = []

    for point in range(len(point_x)):
        distanceToCenter = []
        for i in range(len(center)):
            center_x = center[i][0]
            center_y = center[i][1]
            new_distance = distance(point_x[point], point_y[point], center_x, center_y)
            distanceToCenter.append(new_distance)
        distanceMin = min(distanceToCenter)
        new_cluster_label = distanceToCenter.index(distanceMin)
        new_label.append(new_cluster_label+1)

    for num in range(1, len(center) + 1):
        cluster_x = []
        cluster_y = []
        for label_index in range(len(new_label)):
            if num == new_label[label_index]:
                cluster_x.append(point_x[label_index])
                cluster_y.append(point_y[label_index])
        new_cluster.append([cluster_x, cluster_y])

    new_center = calculateCenter(len(center), new_cluster)
    plot(len(center), new_cluster, new_center)

    new_energy = energy(new_cluster, new_center)

    return new_center, new_energy, new_label
    
    
    def plot(cluster_num, cluster, center):
    color = ['b', 'g', 'r', 'c', 'm', 'y', 'k']
    fig = plt.figure()
    ax = fig.add_subplot(1, 1, 1)
    ax.spines['bottom'].set_position(('data', 0))
    ax.spines['left'].set_position(('data', 0))

    for i in range(cluster_num):
        x = cluster[i][0]
        y = cluster[i][1]
        center_x = center[i][0]
        center_y = center[i][1]
        plt.scatter(x, y, color=color[i])
        plt.scatter(center_x, center_y, color=color[i], label=('center_' + str(i+1)), s=180, marker='D')

    plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
    plt.show()
    
    
    energy_list = []
cluster_num = 3

point_list = inputData()   # plot the random 300 points
point_x = point_list[0]
point_y = point_list[1]

label_list = initalLabel(cluster_num)
first_cluster, center = initCluster(cluster_num, label_list, point_x, point_y)

energy_list.append(energy(first_cluster, center))


for i in range(0, 20):
    new_center, new_energy, new_label = cluster(center, point_x, point_y)
    center = new_center
    energy_list.append(new_energy)
    
    plt.scatter(range(len(energy_list)), energy_list, color='b')
plt.show()

energy_list = []
cluster_num = 4

point_list = inputData()   # plot the random 300 points
point_x = point_list[0]
point_y = point_list[1]
    
    
    
    
    
